{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,MAGX,MAAMC,EAAe,CACnBC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAqBjC,SAASI,EAAcC,EAAKC,EAAOJ,IAfnC,SAAuBK,EAAUN,GAC/B,MAAMO,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUN,IAEpBY,EAAO,C,SAAEN,E,MAAUN,MAEpBA,OAQLc,CAAcV,EAAM,EAAGC,EAAQJ,EAAOG,GACrCW,MAAK,EAACT,SAAEA,EAAQN,MAAEA,MACjBR,EAAAF,GAASG,OAAOuB,QAAQ,uBAAqBV,QAAiBN,UAE/DiB,OAAM,EAACX,SAAEA,EAAQN,MAAEA,MAClBR,EAAAF,GAASG,OAAOyB,QAAQ,sBAAoBZ,QAAeN,UAzB/DJ,EAAaC,KAAKsB,iBAAiB,UA8BnC,SAAsBC,GACpBA,EAAMC,iBACN,MAAMrB,EAAQsB,OAAOC,SAAS3B,EAAaI,MAAMwB,OAC3CvB,EAAOqB,OAAOC,SAAS3B,EAAaK,KAAKuB,OACzCtB,EAASoB,OAAOC,SAAS3B,EAAaM,OAAOsB,OACnD,IAAI,IAAIC,EAAI,EAAGA,EAAIvB,EAAQuB,IACzBtB,EAAcsB,EAAGzB,EAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nNotiflix.Notify.init({\n  timeout: 5000\n});\n\nconst formElements = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nformElements.form.addEventListener(\"submit\", onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n}\n\n\n\nfunction expectPromice(pos, delay, step){\n\n  createPromise(pos + 1, delay + step * pos)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n\n\nfunction onFormSubmit(event){\n  event.preventDefault();\n  const delay = Number.parseInt(formElements.delay.value);\n  const step = Number.parseInt(formElements.step.value);\n  const amount = Number.parseInt(formElements.amount.value);\n  for(let i = 0; i < amount; i++){\n    expectPromice(i, delay, step);\n  }\n}"],"names":["$eWCmQ","parcelRequire","$parcel$interopDefault","Notify","init","timeout","$47d4ff9957288465$var$formElements","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$expectPromice","pos","delay1","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","success","catch","failure","addEventListener","event","preventDefault","Number","parseInt","value","i"],"version":3,"file":"03-promises.53fa07f6.js.map"}