{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,MAGX,IAAMC,EAAe,CACnBC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAqBjC,SAASI,EAAcC,EAAKJ,EAAOC,IAfnC,SAAuBI,EAAUL,GAC/B,IAAMM,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUL,UAEpBW,EAAO,CAAEN,WAAUL,YAEpBA,OAQLa,CAAcT,EAAM,EAAGJ,EAAQC,EAAOG,GACrCU,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUW,EAAKD,EAALf,MACjBR,EAAAF,GAASG,OAAOwB,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANF,EAAM,UAEvEG,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUW,EAAKD,EAALf,MAClBR,EAAAF,GAASG,OAAO2B,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANF,EAAM,UAzBvEpB,EAAaC,KAAKwB,iBAAiB,UA8BnC,SAAsBC,GACpBA,EAAMC,iBAIN,IAHA,IAAMvB,EAAQwB,OAAOC,SAAS7B,EAAaI,MAAM0B,OAC3CzB,EAAOuB,OAAOC,SAAS7B,EAAaK,KAAKyB,OACzCxB,EAASsB,OAAOC,SAAS7B,EAAaM,OAAOwB,OAC3CC,EAAI,EAAGA,EAAIzB,EAAQyB,IACzBxB,EAAcwB,EAAG3B,EAAOC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nNotiflix.Notify.init({\n  timeout: 5000\n});\n\nconst formElements = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nformElements.form.addEventListener(\"submit\", onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n}\n\n\n\nfunction expectPromice(pos, delay, step){\n\n  createPromise(pos + 1, delay + step * pos)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n\n\nfunction onFormSubmit(event){\n  event.preventDefault();\n  const delay = Number.parseInt(formElements.delay.value);\n  const step = Number.parseInt(formElements.step.value);\n  const amount = Number.parseInt(formElements.amount.value);\n  for(let i = 0; i < amount; i++){\n    expectPromice(i, delay, step);\n  }\n}"],"names":["$iU1Pc","parcelRequire","$parcel$interopDefault","Notify","init","timeout","$ce04d3a99e08e73b$var$formElements","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$expectPromice","pos","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$delay","success","concat","catch","failure","addEventListener","event","preventDefault","Number","parseInt","value","i"],"version":3,"file":"03-promises.28b58fed.js.map"}